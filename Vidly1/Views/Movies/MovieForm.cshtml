@model Vidly1.ViewModels.MovieFormViewModel

@{
    // ViewBag.Title = "New Movie";
    ViewBag.Title = Model.Title;    // 20190401 defined in MovieFormViewModel ...
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Get returned Action Name (New/Edit) -->
<h2>@ViewContext.RouteData.GetRequiredString("action") Movie</h2>

@using (Html.BeginForm("Save", "Movies"))
{
    <!-- @Html.ValidationSummary() -->
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control " })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        <!-- 2019-03-22 Adding FormatString "{0:d MMM yyyy }" ...-->
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control " })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.GenreId)
        @Html.DropDownListFor(
            m => m.GenreId,
            new SelectList(Model.Genres, "Id", "Name"),
            "Select Genre",
            new { @class = "form-control"}
            )
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control " })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>
    
    <!-- HiddenFor use to know if record already exists in the DB when deciding if New/Edit -->
    @Html.HiddenFor(m => m.Id)
    
    <!-- Preventing Cross-Site Request Forgery(CSRF) -->
    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-primary">Save</button>

}

<!-- Adding Client-side Validation -->
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}


